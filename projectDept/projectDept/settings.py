"""
Django settings for projectDept project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-po&=cmvmly-p9h1w&_2^iagz5-18d-v-s%$6a^zh*b+b*k*l49'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'accounts',
    'rest_framework_simplejwt',
    'project',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware'
]

ROOT_URLCONF = 'projectDept.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'projectDept.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Custom User model class

AUTH_USER_MODEL = 'accounts.User'

# JWTAuthentication configration for token lifetime

from datetime import timedelta

SIMPLE_JWT={
    'ACCESS_TOKEN_LIFETIME':timedelta(weeks=1),
    'REFRESH_TOKEN_LIFETIME':timedelta(weeks=2),
    'AUTH_HEADER_TYPES':('Bearer','JWT')
}


# Logger configration

import os

LOGGING = {
    "version":1,
    "disable_exiting_loggers":False,
    
    "formatters":{
        'myformatter':{
            "format":"{levelname} {asctime} {module} {message}",
            "style" : "{",
        }
        },
    
    "handlers" :{
        "console":{
            "class":"logging.StreamHandler",
            "level":"INFO",
            "formatter":"myformatter",
            },
        
        "file" :{
            "class":"logging.FileHandler",
            "filename":"debug.log",
            "level":"DEBUG",
            "formatter":"myformatter"
            },
        
        "file1" :{
            "class":"logging.FileHandler",
            "filename":"success.log",
            "level":"INFO",
            "formatter":"myformatter"
            },
        
        "file2" :{
            "class":"logging.FileHandler",
            "filename":"ERROR.log",
            "level":"ERROR",
            "formatter":"myformatter"
            },
        "file3" :{
            "class":"logging.FileHandler",
            "filename":"WARNING.log",
            "level":"WARNING",
            "formatter":"myformatter"
            },
    },
    
    "loggers":{
        "django":{
            "handlers":['console','file','file1','file2','file3'],
            "level":'INFO',
            "propogate":False
        },
    }
    
}

# corsheaders configration 
CORS_ORIGIN_WHITELIST = ['http://localhost:3000']

#Email config

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

